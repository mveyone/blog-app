pipeline {
    agent any

    stages {

      stage('Create Cluster') {
        steps {
          // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
            withCredentials([[
              $class: 'AmazonWebServicesCredentialsBinding',
              credentialsId: "aws-credentials",
              accessKeyVariable: 'AWS_ACCESS_KEY_ID',
              secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
              ]]) {
              sh "eksctl create cluster --name blog-cluster-3 --region us-east-2 --nodegroup-name linux-nodes --node-type t2.micro --nodes 2"
            }
        }
      }

      stage('Update Kubeconfig') {
        steps {
          // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
            withCredentials([[
              $class: 'AmazonWebServicesCredentialsBinding',
              credentialsId: "aws-credentials",
              accessKeyVariable: 'AWS_ACCESS_KEY_ID',
              secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
              ]]) {
              sh """
              aws eks update-kubeconfig --name blog-cluster-3
              """
            }
        }
      }
      
    //   stage('Create Namespace') {
    //     steps {
    //       // You will need to install CloudBees AWS Credentials Plugin in Jenkins and add AWS Credentials first 
    //         withCredentials([[
    //           $class: 'AmazonWebServicesCredentialsBinding',
    //           credentialsId: "aws-credentials",
    //           accessKeyVariable: 'AWS_ACCESS_KEY_ID',
    //           secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
    //           ]]) {
    //           sh "kubectl create namespace python-app"
    //         }
    //     }
    //   }

      stage('Deploy App') {
        steps {
            script{
                build job: 'DEPLOY_APP',
                parameters: [
                [ $class: 'StringParameterValue', name: 'DEPLOYMENT']    
                ]
                
            } 
        } 
      }
    }
}